#!/usr/bin/env bash

# Loading some test-generators utilities
source @abs_builddir@/test-generators-utilities

# Unmaintained tests
gen_ignore_test "Unmaintained tests"
exit

if [ "@VECTORIZATION_ENABLED@" = "no" ];
then
    gen_ignore_test "Vectorization is disabled"
    exit
fi

if [ "@NANOX_ENABLED@" = "no" -o "@NANOX_SSE@" = "no" ];
then
    gen_ignore_test
    exit
fi

# Parsing the test-generator arguments
parse_arguments $@

source @abs_builddir@/mercurium-libraries

cat <<EOF
MCC="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=mcc --config-dir=@abs_top_builddir@/config --verbose --debug-flags=abort_on_ice"
MCXX="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=mcxx --config-dir=@abs_top_builddir@/config --verbose --debug-flags=abort_on_ice"
EOF

COMMON_NANOX_CFLAGS=-DNANOX

SVML=
if [ "$TG_ARG_SVML" = "yes" ];
then
    SVML="--svml --fast-math"
fi

cat <<EOF
compile_versions="\${compile_versions} nanox_mercurium"

test_CC_nanox_mercurium="\${MCC}"
test_CXX_nanox_mercurium="\${MCXX}"

test_CFLAGS_nanox_mercurium="-O0 --simd --debug-flags=vectorization_verbose --openmp ${SVML} -std=gnu99 ${COMMON_NANOX_CFLAGS}"
test_CXXFLAGS_nanox_mercurium="-O0 --simd --debug-flags=vectorization_verbose --openmp ${SVML} ${COMMON_NANOX_CFLAGS}"

test_LDFLAGS_nanox_mercurium="@abs_top_builddir@/lib/perish.o"

EOF



if [ ! -z "@ICC@" ];
then
cat <<EOF
IMCC="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=imcc --config-dir=@abs_top_builddir@/config --verbose --debug-flags=abort_on_ice"
compile_versions="\${compile_versions} nanox_imcc"
test_CC_nanox_imcc="\${IMCC}"

test_CFLAGS_nanox_imcc="-O0 --simd --debug-flags=vectorization_verbose --openmp ${SVML} --enable-ms-builtins ${PROGRAMMING_MODEL} ${COMMON_NANOX_CFLAGS}"
test_CXXFLAGS_nanox_imcc="-O0 --simd --debug-flags=vectorization_verbose --openmp ${SVML} --enable-ms-builtins ${PROGRAMMING_MODEL} ${COMMON_NANOX_CFLAGS}"

test_LDFLAGS_nanox_imcc="@abs_top_builddir@/lib/perish.o"
EOF

fi

cat <<EOF
exec_versions="1thread 2thread 4thread"

test_ENV_1thread="OMP_NUM_THREADS='1'"
test_ENV_2thread="OMP_NUM_THREADS='2'"
test_ENV_4thread="OMP_NUM_THREADS='4'"
EOF
