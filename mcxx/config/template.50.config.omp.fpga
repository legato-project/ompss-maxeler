# fpgacc (FPGA-Zynq)
[fpgacc: omp-base]
language = C
options = --native-vendor=gnu --variable=disable_final_clause_transformation:1
preprocessor_options =-include nanos-fpga.h
linker_options = -lnanox-fpga-api
compiler_phase = libtlnanox-fpga.so
{(instrument|instrumentation)} linker_options_fpga = --hardware_instrumentation
{bitstream-generation} options = --variable=bitstream_generation:1
##  In OmpSs localmem_copies is enabled by default, so we have to change the default behavior of OpenMP::Core
{ompss,!?localmem-copies|localmem-copies} options = --variable=localmem_copies_by_default:1

[fpgacxx: omp-base]
language = C++
options = --native-vendor=gnu --variable=disable_final_clause_transformation:1
preprocessor_options =-include nanos-fpga.h
linker_options = -lnanox-fpga-api
compiler_phase = libtlnanox-fpga.so
preprocessor_name = @G++@
compiler_name = @G++@
linker_name = @G++@
{(instrument|instrumentation)} linker_options_fpga = --hardware_instrumentation
{bitstream-generation} options = --variable=bitstream_generation:1
##  In OmpSs localmem_copies is enabled by default, so we have to change the default behavior of OpenMP::Core
{ompss,!?localmem-copies|localmem-copies} options = --variable=localmem_copies_by_default:1

# FPGA profile
[fpga]
language = C++
options = --native-vendor=gnu
# cross compile for arm: ato some point, this is going to call a hardware build script
preprocessor_name = @G++@
preprocessor_options = -E
compiler_name = @G++@
compiler_options =
linker_name = @G++@
linker_options =
target_options[fpgacc] = no_sublink no_embed
target_options[fpgacc-dev] = no_sublink no_embed
target_options[fpgacxx] = no_sublink no_embed
