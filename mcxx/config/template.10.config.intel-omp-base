# OpenMP + Intel OpenMP RTL
[intel-omp-base]
options = --native-vendor=intel
{openmp} options = --openmp
{openmp,omp-dry-run} options = --variable=omp_dry_run:1


preprocessor_name = @GCC@
preprocessor_options = -E
compiler_name = @GCC@
compiler_options =
linker_name = @GCC@
linker_options = -Xlinker --enable-new-dtags
{openmp} linker_options = -Xlinker @RPATH_PARAMETER@ -Xlinker @INTEL_OMP_LIB@ -L@INTEL_OMP_LIB@ -liomp5

{openmp} preprocessor_options = -I@PKGDATADIR@/intel-omp -D_OPENMP=200805
{openmp} preprocessor_options = -include intel-omp.h
{openmp} compiler_phase = libtlomp-base.so
{openmp} fortran_preprocessor_options = -D_OPENMP=200805

#simd
{svml} preprocessor_options = -include math.h
{openmp, simd-reductions} preprocessor_options = -DINTEL_OMP_SIMD
{openmp, simd} compiler_phase = libtlomp-simd.so
{simd, !mmic, !knl, !avx2} preprocessor_options = @SIMD_INCLUDES@ @SIMD_FLAGS@
{simd, !mmic, !knl, !avx2} compiler_options = @SIMD_FLAGS@
{simd} options = --variable=simd_enabled:1
{simd, spml} options = --variable=spml_enabled:1
{svml} options = --variable=svml_enabled:1
{svml} linker_options = -lsvml
{fast-math} options = --variable=fast_math_enabled:1
{knl} preprocessor_options = -xMIC-AVX512
{knl} compiler_options = -xMIC-AVX512
{knl} linker_options = -xMIC-AVX512 -lifcore -limf -lirng -lintlc
{simd, knl} options = --variable=knl_enabled:1
{simd, mmic} options = --variable=mic_enabled:1
{simd, avx2} options = --variable=avx2_enabled:1
{simd, (romol|valib)} options = --variable=romol_enabled:1
{simd, (mmic|knl)} preprocessor_options = -include immintrin.h
{simd, (romol|valib)} preprocessor_options = -I @PKGDATADIR@/romol -include valib.h
{simd, avx2} preprocessor_options = -include immintrin.h
{prefer-gather-scatter} options = --variable=prefer_gather_scatter:1
{prefer-mask-gather-scatter} options = --variable=prefer_mask_gather_scatter:1
{only-adjacent-accesses} options = --variable=only_adjacent_accesses:1
{only-aligned-accesses} options = --variable=only_aligned_accesses:1
{overlap-in-place} options = --variable=overlap_in_place:1
{simd-reductions} options = --variable=simd-reductions:1

# Lowering Phases
{openmp, !do-not-lower-omp} compiler_phase = libtlintel-omp-lowering.so
{openmp, simd} compiler_phase = libtlvector-lowering.so
